+section('Guides')

+subsection('Basic Features')
  :markdown-it
    This example demonstrates the most commonly-used features of vue-treeselect. Try the fuzzy matching functionality by typing a few letters.
  +demo('BasicFeatures')
  :markdown-it
    The first thing you need to learn is how to define options. There are two types of options: **a. folder options** that are foldable & *may* have children options, and **b. normal options** that aren't & don't. Here, I'd like to borrow the basic concepts from Computer Science and call the former as *branch nodes* & the latter as *leaf nodes*. These two kinds of nodes together compose the tree.

    Defining leaf nodes is quite simple:

    ```js
    {
      id: '<id>', // used to identify the option within the tree so it's value must be unique across all options
      label: '<label>', // used to display the option
    }
    ```

    Defining branch nodes only needs an extra `children` property:

    ```js
    {
      id: '<id>',
      label: '<label>',
      children: [
        {
          id: '<child id>',
          label: '<child label>',
        },
        ...
      ],
    }
    ```

    Then you can pass an array of these nodes as the `options` prop. Note that, even if you assign an empty array to the `children` property, it's still considered to be a branch node. This is likely different from what you've learnt from Computer Science, in which a node with no children is commonly known as a leaf node.

    For information on all available properties in a `node` object, see [below](#node).

+subsection('More Features')
  :markdown-it
    This demonstrates more features.
  +demo('MoreFeatures')
